# frozen_string_literal: true

require 'pry'
require_relative './../utils/file_loader.rb'

class AssemblyParser < FileLoader
  def initialize(file_path)
    super(file_path)
    @accumulator = 0
  end

  def call
    @instructions = []
    each_line { @instructions << instruction }

    @counter = 0

    while !@instructions[@counter][:visited]
      instruction = @instructions[@counter]

      binding.pry

      instruction[:visited] = true

      send(
        instruction[:op_code],
        instruction[:arg]
      )
    end

    puts "The value of the accumulator is #{@accumulator}"
  end

  private

  def instruction
    {
      visited: false,
      op_code: op_code,
      arg: arg
    }
  end

  def op_code
    @current_line.split(' ').first
  end

  def jmp(arg)
    operator = arg[0]
    rest = arg[1..-1].to_i

    @counter = @counter.send(operator, rest)
  end

  def nop(arg)
    @counter += 1
  end

  def arg
    @current_line.split(' ')[1]
  end

  def acc(arg)
    operator = arg[0]
    rest = arg[1..-1].to_i

    @accumulator = @accumulator.send operator, rest
    @counter += 1
  end
end

AssemblyParser.new('input.txt').call
